version: "3"

services:
# Clients
  client:
    build:
      context: ./frontends/client
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - traefik
    links:
      - traefik
    ports:
      - 4200:4200
    volumes:
      - ./frontends/client:/app

# Servers
  idcards:
    build:
      context: ./services/idcards
      dockerfile: Dockerfile
    image: app/idcards
    restart: always
    env_file:
      - app-variables.env
    volumes:
      - ./services/idcards:/go/src/idcards
    labels:
      traefik.backend: idcards
      traefik.frontend.rule: "Host:idcards.docker.localhost"
    ports:
      - 3030:3030
    depends_on:
      - mysql
    links:
      - mysql

  admin:
    build:
      context: ./services/admin
      dockerfile: Dockerfile
    image: app/admin
    restart: always
    env_file:
      - app-variables.env
    volumes:
      - ./services/admin:/go/src/admin
    labels:
      traefik.backend: admin
      traefik.enable: "true"
      traefik.port: "3010"
      traefik.frontend.entryPoints: "http"
      traefik.frontend.rule: "Host:admin.docker.localhost"


# Services
  traefik:
    image: traefik:v1.7
    ports:
      - "3010:80"
      - "5050:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./traefik/traefik.toml:/traefik.toml

  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    env_file:
      - db.env

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
