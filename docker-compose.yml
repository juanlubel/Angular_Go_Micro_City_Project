version: "3"

services:
# Clients
  bankandshops:
    build:
      context: ./frontends/BankAndShops
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - traefik
    links:
      - traefik
    ports:
      - 4500:4500
    volumes:
      - ./frontends/BankAndShops:/app

# Servers
  bank:
    build:
      context: ./services/bank
      dockerfile: Dockerfile
    image: app/bank
    restart: unless-stopped
    networks:
      - web
      - internal
    env_file:
      - app-variables.env
    volumes:
      - ./services/bank:/go/src/bank
    labels:
      traefik.frontend.rule: "PathPrefix:/"
      traefik.enable: "true"  
      traefik.backend: "bank"
      traefik.docker.network: web
      traefik.port: "3010"
      traefik.frontend.entryPoints: "http"
      traefik.frontend.rule: "Host:bank.localhost"

  redis_server:
    build:
      context: ./redis
      dockerfile: Dockerfile
    image: app/redis
    restart: unless-stopped
    depends_on: 
      - redis # This service depends on redis. Start that first.
    environment: # Pass environment variables to the service
      REDIS_URL: redis:6379   
    volumes:
      - ./redis:/go/src/redis
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - web
    labels:
      traefik.frontend.rule: "PathPrefix:/"
      traefik.enable: "true"  
      traefik.docker.network: web
      traefik.backend: "redis_server"
      traefik.port: "3015"
      traefik.frontend.entryPoints: "http"
      traefik.frontend.rule: 'Host:redis.localhost'

# Services 
  traefik:
    image: traefik:v1.7
    ports:
      - "3015:80"
      - "3010:80"
      - "5050:8080"
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./traefik/traefik.toml:/traefik.toml
  
  redis:
    image: "redis:alpine" # Use a public Redis image to build the redis service    
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "6379:6379"

  mysql:
    image: mysql
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: microcity
      MYSQL_ROOT_USERNAME: root
      MYSQL_ROOT_PASSWORD: test
    volumes:
    - /mysql:/var/lib/mysql
    networks:
      - internal
    labels:
      traefik.enable: "false"

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080

networks:
  backend: 
  web:
    external: true
  internal:
    external: false