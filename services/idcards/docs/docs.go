// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-11-15 11:47:11.720758379 +0000 UTC m=+0.017756870

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
  "swagger": "2.0",
  "basePath": "/api",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "info": {
      "version": "v1.0",
      "title": "IdCards Server"
  },
  "paths": {
    "/idCards": {
      "get": {
        "summary": "Show All Users",
        "description": "Show All Users",
        "tags": [
          "idCards"
        ],
        "operationId": "ShowAllItems",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/idCard/{id}": {
      "get": {
        "summary": "Show All Users",
        "description": "Show All Users",
        "tags": [
          "idCards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identification User",
            "required": true,
            "type": "string"
          }
        ],
        "operationId": "ShowAllItems",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
		"slug": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "nCard": {
          "type": "integer"
        },
        "pass": {
          "type": "string"
        }
      }
    }
  }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "App Test Swagger",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
